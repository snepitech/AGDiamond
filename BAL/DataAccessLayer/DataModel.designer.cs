#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BAL.DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AGDiamond")]
	public partial class DataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertConstant(Constant instance);
    partial void UpdateConstant(Constant instance);
    partial void DeleteConstant(Constant instance);
    partial void InsertRole_Mast(Role_Mast instance);
    partial void UpdateRole_Mast(Role_Mast instance);
    partial void DeleteRole_Mast(Role_Mast instance);
    partial void InsertUser_Mast(User_Mast instance);
    partial void UpdateUser_Mast(User_Mast instance);
    partial void DeleteUser_Mast(User_Mast instance);
    partial void InsertPageList(PageList instance);
    partial void UpdatePageList(PageList instance);
    partial void DeletePageList(PageList instance);
    #endregion
		
		public DataModelDataContext() : 
				base(global::BAL.Properties.Settings.Default.AGDiamondConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Constant> Constants
		{
			get
			{
				return this.GetTable<Constant>();
			}
		}
		
		public System.Data.Linq.Table<Role_Mast> Role_Masts
		{
			get
			{
				return this.GetTable<Role_Mast>();
			}
		}
		
		public System.Data.Linq.Table<User_Mast> User_Masts
		{
			get
			{
				return this.GetTable<User_Mast>();
			}
		}
		
		public System.Data.Linq.Table<PageList> PageLists
		{
			get
			{
				return this.GetTable<PageList>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Constant")]
	public partial class Constant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Key;
		
		private string _Value;
		
		private string _Type;
		
		private System.Nullable<bool> _is_active;
		
		private System.Nullable<System.DateTime> _insert_on_utc;
		
		private System.Nullable<System.DateTime> _update_on_utc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    partial void Oninsert_on_utcChanging(System.Nullable<System.DateTime> value);
    partial void Oninsert_on_utcChanged();
    partial void Onupdate_on_utcChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_on_utcChanged();
    #endregion
		
		public Constant()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="VarChar(100)")]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_on_utc", DbType="DateTime")]
		public System.Nullable<System.DateTime> insert_on_utc
		{
			get
			{
				return this._insert_on_utc;
			}
			set
			{
				if ((this._insert_on_utc != value))
				{
					this.Oninsert_on_utcChanging(value);
					this.SendPropertyChanging();
					this._insert_on_utc = value;
					this.SendPropertyChanged("insert_on_utc");
					this.Oninsert_on_utcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_on_utc", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_on_utc
		{
			get
			{
				return this._update_on_utc;
			}
			set
			{
				if ((this._update_on_utc != value))
				{
					this.Onupdate_on_utcChanging(value);
					this.SendPropertyChanging();
					this._update_on_utc = value;
					this.SendPropertyChanged("update_on_utc");
					this.Onupdate_on_utcChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role_Mast")]
	public partial class Role_Mast : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _name;
		
		private string _remark;
		
		private System.Nullable<bool> _is_active;
		
		private System.Nullable<int> _added_by;
		
		private System.Nullable<int> _edited_by;
		
		private System.Nullable<System.DateTime> _insert_date;
		
		private System.Nullable<System.DateTime> _update_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    partial void Onadded_byChanging(System.Nullable<int> value);
    partial void Onadded_byChanged();
    partial void Onedited_byChanging(System.Nullable<int> value);
    partial void Onedited_byChanged();
    partial void Oninsert_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oninsert_dateChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    #endregion
		
		public Role_Mast()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(MAX)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_added_by", DbType="Int")]
		public System.Nullable<int> added_by
		{
			get
			{
				return this._added_by;
			}
			set
			{
				if ((this._added_by != value))
				{
					this.Onadded_byChanging(value);
					this.SendPropertyChanging();
					this._added_by = value;
					this.SendPropertyChanged("added_by");
					this.Onadded_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edited_by", DbType="Int")]
		public System.Nullable<int> edited_by
		{
			get
			{
				return this._edited_by;
			}
			set
			{
				if ((this._edited_by != value))
				{
					this.Onedited_byChanging(value);
					this.SendPropertyChanging();
					this._edited_by = value;
					this.SendPropertyChanged("edited_by");
					this.Onedited_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> insert_date
		{
			get
			{
				return this._insert_date;
			}
			set
			{
				if ((this._insert_date != value))
				{
					this.Oninsert_dateChanging(value);
					this.SendPropertyChanging();
					this._insert_date = value;
					this.SendPropertyChanged("insert_date");
					this.Oninsert_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Mast")]
	public partial class User_Mast : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _role_id;
		
		private string _code;
		
		private string _name;
		
		private string _remark;
		
		private System.Nullable<bool> _is_active;
		
		private System.Nullable<int> _added_by;
		
		private System.Nullable<int> _edited_by;
		
		private System.Nullable<System.DateTime> _insert_date;
		
		private System.Nullable<System.DateTime> _update_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onrole_idChanging(System.Nullable<int> value);
    partial void Onrole_idChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    partial void Onadded_byChanging(System.Nullable<int> value);
    partial void Onadded_byChanged();
    partial void Onedited_byChanging(System.Nullable<int> value);
    partial void Onedited_byChanged();
    partial void Oninsert_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oninsert_dateChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    #endregion
		
		public User_Mast()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int")]
		public System.Nullable<int> role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(MAX)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_added_by", DbType="Int")]
		public System.Nullable<int> added_by
		{
			get
			{
				return this._added_by;
			}
			set
			{
				if ((this._added_by != value))
				{
					this.Onadded_byChanging(value);
					this.SendPropertyChanging();
					this._added_by = value;
					this.SendPropertyChanged("added_by");
					this.Onadded_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edited_by", DbType="Int")]
		public System.Nullable<int> edited_by
		{
			get
			{
				return this._edited_by;
			}
			set
			{
				if ((this._edited_by != value))
				{
					this.Onedited_byChanging(value);
					this.SendPropertyChanging();
					this._edited_by = value;
					this.SendPropertyChanged("edited_by");
					this.Onedited_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> insert_date
		{
			get
			{
				return this._insert_date;
			}
			set
			{
				if ((this._insert_date != value))
				{
					this.Oninsert_dateChanging(value);
					this.SendPropertyChanging();
					this._insert_date = value;
					this.SendPropertyChanged("insert_date");
					this.Oninsert_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageList")]
	public partial class PageList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _page_name;
		
		private string _page_name_sub;
		
		private string _page_name_sub_more;
		
		private System.Nullable<bool> _is_view;
		
		private System.Nullable<bool> _is_insert;
		
		private System.Nullable<bool> _is_update;
		
		private System.Nullable<bool> _is_delete;
		
		private System.Nullable<bool> _is_active;
		
		private System.Nullable<int> _added_by;
		
		private System.Nullable<int> _edited_by;
		
		private System.Nullable<System.DateTime> _insert_date;
		
		private System.Nullable<System.DateTime> _update_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpage_nameChanging(string value);
    partial void Onpage_nameChanged();
    partial void Onpage_name_subChanging(string value);
    partial void Onpage_name_subChanged();
    partial void Onpage_name_sub_moreChanging(string value);
    partial void Onpage_name_sub_moreChanged();
    partial void Onis_viewChanging(System.Nullable<bool> value);
    partial void Onis_viewChanged();
    partial void Onis_insertChanging(System.Nullable<bool> value);
    partial void Onis_insertChanged();
    partial void Onis_updateChanging(System.Nullable<bool> value);
    partial void Onis_updateChanged();
    partial void Onis_deleteChanging(System.Nullable<bool> value);
    partial void Onis_deleteChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    partial void Onadded_byChanging(System.Nullable<int> value);
    partial void Onadded_byChanged();
    partial void Onedited_byChanging(System.Nullable<int> value);
    partial void Onedited_byChanged();
    partial void Oninsert_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oninsert_dateChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    #endregion
		
		public PageList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_name", DbType="VarChar(MAX)")]
		public string page_name
		{
			get
			{
				return this._page_name;
			}
			set
			{
				if ((this._page_name != value))
				{
					this.Onpage_nameChanging(value);
					this.SendPropertyChanging();
					this._page_name = value;
					this.SendPropertyChanged("page_name");
					this.Onpage_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_name_sub", DbType="VarChar(MAX)")]
		public string page_name_sub
		{
			get
			{
				return this._page_name_sub;
			}
			set
			{
				if ((this._page_name_sub != value))
				{
					this.Onpage_name_subChanging(value);
					this.SendPropertyChanging();
					this._page_name_sub = value;
					this.SendPropertyChanged("page_name_sub");
					this.Onpage_name_subChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_name_sub_more", DbType="VarChar(50)")]
		public string page_name_sub_more
		{
			get
			{
				return this._page_name_sub_more;
			}
			set
			{
				if ((this._page_name_sub_more != value))
				{
					this.Onpage_name_sub_moreChanging(value);
					this.SendPropertyChanging();
					this._page_name_sub_more = value;
					this.SendPropertyChanged("page_name_sub_more");
					this.Onpage_name_sub_moreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_view", DbType="Bit")]
		public System.Nullable<bool> is_view
		{
			get
			{
				return this._is_view;
			}
			set
			{
				if ((this._is_view != value))
				{
					this.Onis_viewChanging(value);
					this.SendPropertyChanging();
					this._is_view = value;
					this.SendPropertyChanged("is_view");
					this.Onis_viewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_insert", DbType="Bit")]
		public System.Nullable<bool> is_insert
		{
			get
			{
				return this._is_insert;
			}
			set
			{
				if ((this._is_insert != value))
				{
					this.Onis_insertChanging(value);
					this.SendPropertyChanging();
					this._is_insert = value;
					this.SendPropertyChanged("is_insert");
					this.Onis_insertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_update", DbType="Bit")]
		public System.Nullable<bool> is_update
		{
			get
			{
				return this._is_update;
			}
			set
			{
				if ((this._is_update != value))
				{
					this.Onis_updateChanging(value);
					this.SendPropertyChanging();
					this._is_update = value;
					this.SendPropertyChanged("is_update");
					this.Onis_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_delete", DbType="Bit")]
		public System.Nullable<bool> is_delete
		{
			get
			{
				return this._is_delete;
			}
			set
			{
				if ((this._is_delete != value))
				{
					this.Onis_deleteChanging(value);
					this.SendPropertyChanging();
					this._is_delete = value;
					this.SendPropertyChanged("is_delete");
					this.Onis_deleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_added_by", DbType="Int")]
		public System.Nullable<int> added_by
		{
			get
			{
				return this._added_by;
			}
			set
			{
				if ((this._added_by != value))
				{
					this.Onadded_byChanging(value);
					this.SendPropertyChanging();
					this._added_by = value;
					this.SendPropertyChanged("added_by");
					this.Onadded_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edited_by", DbType="Int")]
		public System.Nullable<int> edited_by
		{
			get
			{
				return this._edited_by;
			}
			set
			{
				if ((this._edited_by != value))
				{
					this.Onedited_byChanging(value);
					this.SendPropertyChanging();
					this._edited_by = value;
					this.SendPropertyChanged("edited_by");
					this.Onedited_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insert_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> insert_date
		{
			get
			{
				return this._insert_date;
			}
			set
			{
				if ((this._insert_date != value))
				{
					this.Oninsert_dateChanging(value);
					this.SendPropertyChanging();
					this._insert_date = value;
					this.SendPropertyChanged("insert_date");
					this.Oninsert_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
